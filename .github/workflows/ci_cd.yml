name: CI/CD on master
on:
  push:
    branches:
      - master  

env:
  PLUGIN_NAME: "homecentr/glusterfs-volume-plugin"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: "Determine release version"
        uses: codfish/semantic-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Dockerfile with Hadolint
        uses: brpaz/hadolint-action@master

      - name: "Build Docker image"
        if: env.RELEASE_VERSION != ''
        run: |
          docker build . -t "$PLUGIN_NAME:$RELEASE_VERSION"
      
      - name: Scan with Phonito Security
        if: env.RELEASE_VERSION != ''
        uses: phonito/phonito-scanner-action@master
        with:
          image: ${{ env.PLUGIN_NAME }}:${{ env.RELEASE_VERSION }}
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'

      - name: Scan with Snyk
        if: env.RELEASE_VERSION != ''
        uses: snyk/actions/docker@0.1.1
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.PLUGIN_NAME }}:${{ env.RELEASE_VERSION }}

      - name: Build Docker plugin
        if: env.RELEASE_VERSION != ''
        run: sudo sh ./build.sh "${{ env.RELEASE_VERSION }}"

        # The property is still called docker_image_tag because the tests use the same resolver as normal image tests
      - name: Test Docker plugin
        if: env.RELEASE_VERSION != ''
        run: cd tests && sudo gradle test --info -Ddocker_image_tag=${{ env.PLUGIN_NAME }}:${{ env.RELEASE_VERSION }}

      - name: "Log into Docker Hub"
        if: env.RELEASE_VERSION != ''
        run: "echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin"

      - name: "Push plugin"
        if: env.RELEASE_VERSION != ''
        run: "docker plugin push $PLUGIN_NAME:$RELEASE_VERSION"

      - name: "Update Docker Hub description"
        if: env.RELEASE_VERSION != ''
        uses: peter-evans/dockerhub-description@v2.4.1
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ env.PLUGIN_NAME }}